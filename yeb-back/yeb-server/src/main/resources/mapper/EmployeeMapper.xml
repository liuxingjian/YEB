<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cdh.server.mapper.EmployeeMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.cdh.server.pojo.Employee">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="gender" property="gender" />
        <result column="birthday" property="birthday" />
        <result column="idCard" property="idCard" />
        <result column="wedlock" property="wedlock" />
        <result column="nationId" property="nationId" />
        <result column="nativePlace" property="nativePlace" />
        <result column="politicId" property="politicId" />
        <result column="email" property="email" />
        <result column="phone" property="phone" />
        <result column="address" property="address" />
        <result column="departmentId" property="departmentId" />
        <result column="jobLevelId" property="jobLevelId" />
        <result column="posId" property="posId" />
        <result column="engageForm" property="engageForm" />
        <result column="tiptopDegree" property="tiptopDegree" />
        <result column="specialty" property="specialty" />
        <result column="school" property="school" />
        <result column="beginDate" property="beginDate" />
        <result column="workState" property="workState" />
        <result column="workID" property="workID" />
        <result column="contractTerm" property="contractTerm" />
        <result column="conversionTime" property="conversionTime" />
        <result column="notWorkDate" property="notWorkDate" />
        <result column="beginContract" property="beginContract" />
        <result column="endContract" property="endContract" />
        <result column="workAge" property="workAge" />
        <result column="salaryId" property="salaryId" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, name, gender, birthday, idCard, wedlock, nationId, nativePlace, politicId, email, phone, address, departmentId, jobLevelId, posId, engageForm, tiptopDegree, specialty, school, beginDate, workState, workID, contractTerm, conversionTime, notWorkDate, beginContract, endContract, workAge, salaryId
    </sql>
    <resultMap id="EmployeeMap" type="com.cdh.server.pojo.Employee" extends="BaseResultMap">
        <association property="nation" javaType="com.cdh.server.pojo.Nation">
            <id column="nId" property="id" />
            <result column="nName" property="name" />
        </association>
        <association property="politicsStatus" javaType="com.cdh.server.pojo.PoliticsStatus">
            <id column="psId" property="id" />
            <result column="psName" property="name" />
        </association>
        <association property="department" javaType="com.cdh.server.pojo.Department">
            <id column="dId" property="id" />
            <result column="dName" property="name" />
        </association>
        <association property="joblevel" javaType="com.cdh.server.pojo.Joblevel">
            <id column="jlId" property="id" />
            <result column="jlName" property="name" />
        </association>
        <association property="position" javaType="com.cdh.server.pojo.Position">
            <id column="pId" property="id" />
            <result column="pName" property="name" />
        </association>
    </resultMap>
    <!--分页查询所有员工-->
    <select id="getEmployeeByPage" resultMap="EmployeeMap">
        SELECT
            e.*,
            n.id AS nId,
            n.name AS nName,
            ps.id AS psId,
            ps.name AS psName,
            d.id AS dId,
            d.name AS dName,
            jl.id AS jlId,
            jl.name AS jlName,
            p.id AS pId,
            p.name AS pName
        FROM
            `t_employee` e
                LEFT JOIN `t_nation` n ON e.nationId = n.id
                LEFT JOIN `t_politics_status` ps ON e.politicId = ps.id
                LEFT JOIN `t_department` d ON e.departmentId = d.id
                LEFT JOIN `t_joblevel` jl ON e.jobLevelId = jl.id
                LEFT JOIN `t_position` p ON e.posId = p.id
        <where>
            <if test="null != employee.name and '' != employee.name">
                e.name LIKE CONCAT('%',#{employee.name},'%')
            </if>
            <if test="null != employee.politicId and '' != employee.politicId">
                AND e.politicId = #{employee.politicId}
            </if>
            <if test="null != employee.nationId and '' != employee.nationId">
                AND e.politicId = #{employee.nationId}
            </if>
            <if test="null != employee.jobLevelId and '' != employee.jobLevelId">
                AND e.jobLevelId = #{employee.jobLevelId}
            </if>
            <if test="null != employee.posId and '' != employee.posId">
                AND e.posId = #{employee.posId}
            </if>
            <if test="null != employee.engageForm and '' != employee.engageForm">
                AND e.engageForm = #{employee.engageForm}
            </if>
            <if test="null != employee.departmentId and '' != employee.departmentId">
                AND e.departmentId = #{employee.departmentId}
            </if>
            <if test="null != employee.departmentId and '' != employee.departmentId">
                AND e.departmentId = #{employee.departmentId}
            </if>
            <if test="null != dateScope and 2 == dateScope.length">
                AND e.beginDate BETWEEN #{dateScope[0]} AND #{dateScope[1]}
            </if>
        </where>
        ORDER BY e.id
    </select>
    <select id="getEmployee" resultMap="EmployeeMap">
    SELECT
            e.*,
            n.id AS nId,
            n.name AS nName,
            ps.id AS psId,
            ps.name AS psName,
            d.id AS dId,
            d.name AS dName,
            jl.id AS jlId,
            jl.name AS jlName,
            p.id AS pId,
            p.name AS pName
        FROM
            `t_employee` e
                LEFT JOIN `t_nation` n ON e.nationId = n.id
                LEFT JOIN `t_politics_status` ps ON e.politicId = ps.id
                LEFT JOIN `t_department` d ON e.departmentId = d.id
                LEFT JOIN `t_joblevel` jl ON e.jobLevelId = jl.id
                LEFT JOIN `t_position` p ON e.posId = p.id
        <where>
            <if test="null != id">
                e.id = #{id}
            </if>
        </where>
        order by e.id
    </select>
    <resultMap id="salaryMap" type="com.cdh.server.pojo.Employee" extends="BaseResultMap">
        <association property="department" javaType="com.cdh.server.pojo.Department">
            <result column="dname" property="name" />
        </association>
        <association property="salary" javaType="com.cdh.server.pojo.Salary">
            <id column="sId" property="id" />
            <result column="sname" property="name" />
            <result column="sbasicSalary" property="basicSalary" />
            <result column="sbonus" property="bonus" />
            <result column="slunchSalary" property="lunchSalary" />
            <result column="strafficSalary" property="trafficSalary" />
            <result column="sallSalary" property="allSalary" />
            <result column="spensionBase" property="pensionBase" />
            <result column="spensionPer" property="pensionPer" />
            <result column="smedicalBase" property="medicalBase" />
            <result column="smedicalPer" property="medicalPer" />
            <result column="saccumulationFundBase" property="accumulationFundBase" />
            <result column="saccumulationFundPer" property="accumulationFundPer" />
            <result column="screateDate" property="createDate" />
        </association>
    </resultMap>
    <!--查询所有员工账套-->
    <select id="listEmployeeWithSal" resultMap="salaryMap">
    SELECT
        e.*,
        d.name as dname,
        s.id as sId,
        s.basicSalary as sbasicSalary,
        s.bonus as sbonus,
        s.lunchSalary as slunchSalary,
        s.trafficSalary as strafficSalary,
        s.allSalary as sallSalary,
        s.pensionBase as spensionBase,
        s.pensionPer as spensionPer,
        s.medicalBase as smedicalBase,
        s.medicalPer as smedicalPer,
        s.accumulationFundBase as saccumulationFundBase,
        s.accumulationFundPer as saccumulationFundPer,
        s.name as sname,
        s.createDate as screateDate
    from t_employee e
        left join t_salary s on e.salaryId = s.id
        left join t_department d on e.departmentId = d.id
    order by e.id
    </select>

</mapper>
